


def splot(sigma, teff):
    '''
    Simple 2D image of an S-curve in sigma[g/cm^2]-Teff[kK] space 
    '''
    clf()
    plot(sigma, teff, 'k')
    xscale('log')
    ylabel(r'$T_{\rm eff}$, kK') ;   xlabel(r'$\Sigma$, ${\rm g\,cm^{-2}}$')
    savefig('scure.png')
    close('all')

        
def deltatshow(r9 = 10., alpha=0.1):
    # contour of an S-curve based on dT (temperature balance) overplotted with the splot-style S-curve
    
    lines = loadtxt('pitable.dat', comments="#", delimiter=" ", unpack=False)

    sigma = lines[:,0]
    mdot = lines[:,1]
    dt = lines[:,2]
    sun = unique(sigma) ; mun = unique(mdot)
    ns = size(sun);  nm = size(mun)
    dt = transpose(reshape(dt, [ns, nm]))

    lines = loadtxt('sigtable.dat', comments="#", delimiter=" ", unpack=False)
    sigline = lines[:,1]
    mdotline = lines[:,0]    

    teff = 22.6708 *mun**0.25 / r9**0.75
    teff_line = 22.6708 *mdotline**0.25 / r9**0.75
    
    clf()
    contourf(sun, teff, dt)
    colorbar()
    contour(sun, teff, dt, levels=[0.], colors='w')
    plot(sigline, teff_line, 'k', linewidth=2)
    xscale('log')
    ylabel(r'$T_{\rm eff}$, kK') ;   xlabel(r'$\Sigma$, ${\rm g\,cm^{-2}}$')
    savefig('deltat.png')
    close('all')
